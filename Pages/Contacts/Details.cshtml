@page
@model ContactManager.Pages.Contacts.DetailsModel

@{
    ViewData["Title"] = "Contact Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Contact Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 20px;
        }

        .contact-details {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-top: 20px;
            max-width: 600px;
            margin: 0 auto;
        }

            .contact-details h1 {
                font-size: 36px;
                margin-bottom: 30px;
                color: #3498DB;
                text-align: center;
                text-transform: uppercase;
            }

            .contact-details dl {
                font-size: 18px;
                margin-bottom: 20px;
            }

            .contact-details dt {
                font-weight: bold;
                margin-bottom: 5px;
                color: #6c757d;
            }

            .contact-details dd {
                margin-bottom: 15px;
            }

        .action-buttons {
            margin-top: 20px;
        }

        .btn-approve,
        .btn-reject,
        .btn-edit {
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="contact-details">
            <h1>Contact Details</h1>

            <dl class="row">
                <dt class="col-sm-2">Name:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.Name)</dd>
                <dt class="col-sm-2">Address:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.Address)</dd>
                <dt class="col-sm-2">City:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.City)</dd>
                <dt class="col-sm-2">State:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.State)</dd>
                <dt class="col-sm-2">Zip:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.Zip)</dd>
                <dt class="col-sm-2">Email:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.Email)</dd>
                <dt class="col-sm-2">Status:</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.Contact.Status)</dd>
            </dl>

            <div class="action-buttons text-center">
                @if (Model.Contact.Status != ContactStatus.Approved)
                {
                    if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Approve)).Succeeded)
                    {
                        <form method="post" style="display: inline;">
                            <input type="hidden" name="id" value="@Model.Contact.ContactId" />
                            <input type="hidden" name="status" value="@ContactStatus.Approved" />
                            <button type="submit" class="btn btn-success btn-approve">Approve</button>
                        </form>
                    }
                }

                @if (Model.Contact.Status != ContactStatus.Rejected)
                {
                    if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Reject)).Succeeded)
                    {
                        <form method="post" style="display: inline;">
                            <input type="hidden" name="id" value="@Model.Contact.ContactId" />
                            <input type="hidden" name="status" value="@ContactStatus.Rejected" />
                            <button type="submit" class="btn btn-danger btn-reject">Reject</button>
                        </form>
                    }
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Update)).Succeeded)
                {
                    <a class="btn btn-primary btn-edit" asp-page="./Edit" asp-route-id="@Model.Contact.ContactId">Edit</a>
                }
                <a class="btn btn-secondary" asp-page="./Index">Back to List</a>
            </div>
        </div>
    </div>
</body>
</html>
